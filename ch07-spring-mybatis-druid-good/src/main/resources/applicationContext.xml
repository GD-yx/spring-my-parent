<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
          https://www.springframework.org/schema/context/spring-context.xsd
          http://mybatis.org/schema/mybatis-spring
           http://mybatis.org/schema/mybatis-spring.xsd">

    <!--
        相当于让spring读取外部的properties文件
    placeholder:占位符的意思.
    设置local-override=true，确保properties文件的内容不会被其它覆盖。
    -->
    <context:property-placeholder location="classpath:db.properties" local-override="true"/>

    <!--
            第一步：dataSource
            第二步：sqlSessionFactory
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="pageInterceptor" class="com.github.pagehelper.PageInterceptor">
        <property name="properties">
            <value>
                reasonable=true
                supportMethodsArguments=true
            </value>
        </property>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--前缀classpath是spring拥有的一种查找资源的方式,
        意思就是在当前项目的类路劲下面查找文件
        classpath* 这个前缀是在当前项目的类路径以及它所依赖的其它jar文件里面找-->
        <property name="dataSource" ref="dataSource"/>
        <!--configLocation就是引入mybatis的配置文件.-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="plugins" ref="pageInterceptor"/>
    </bean>

    <!--下面的设置会使dao的所有实现类被创建出来
    并且注册到spring容器中。
    -->
    <mybatis:scan base-package="dao"/>
    <bean id="deptService" class="service.impl.DeptServiceImpl" autowire="byType">

    </bean>
</beans>